<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.2 on linux)" generated="20200618 16:14:26.558" rpa="false">
<suite id="s1" name="Tests" source="/opt/robotframework/tests">
<suite id="s1-s1" name="Faker" source="/opt/robotframework/tests/faker.robot">
<test id="s1-s1-t1" name="Can Get Fake Name">
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20200618 16:14:26.990" level="INFO">${name} = Erin Howell</msg>
<status status="PASS" starttime="20200618 16:14:26.989" endtime="20200618 16:14:26.990"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20200618 16:14:26.990" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20200618 16:14:26.990" endtime="20200618 16:14:26.990"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:26.988" endtime="20200618 16:14:26.990" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Two Calls To Faker Should Give Different Results">
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20200618 16:14:26.992" level="INFO">${name} = Taylor Brown</msg>
<status status="PASS" starttime="20200618 16:14:26.991" endtime="20200618 16:14:26.992"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20200618 16:14:26.992" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20200618 16:14:26.992" endtime="20200618 16:14:26.992"></status>
</kw>
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name2}</var>
</assign>
<msg timestamp="20200618 16:14:26.993" level="INFO">${name2} = Patrick Johnson</msg>
<status status="PASS" starttime="20200618 16:14:26.992" endtime="20200618 16:14:26.993"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name2}</arg>
</arguments>
<msg timestamp="20200618 16:14:26.993" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20200618 16:14:26.993" endtime="20200618 16:14:26.993"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${name}</arg>
<arg>${name2}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:26.993" endtime="20200618 16:14:26.994"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:26.991" endtime="20200618 16:14:26.994" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Can call Words with integer argument">
<kw name="Words" library="FakerLibrary">
<doc>:returns: An array of random words. for example: ['Lorem', 'ipsum', 'dolor']</doc>
<arguments>
<arg>nb=${10}</arg>
</arguments>
<assign>
<var>${WordsList}</var>
</assign>
<msg timestamp="20200618 16:14:26.995" level="INFO">${WordsList} = ['assume', 'instead', 'threat', 'themselves', 'half', 'training', 'provide', 'although', 'citizen', 'trouble']</msg>
<status status="PASS" starttime="20200618 16:14:26.995" endtime="20200618 16:14:26.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${WordsList}</arg>
</arguments>
<msg timestamp="20200618 16:14:26.996" level="INFO">['assume', 'instead', 'threat', 'themselves', 'half', 'training', 'provide', 'although', 'citizen', 'trouble']</msg>
<status status="PASS" starttime="20200618 16:14:26.995" endtime="20200618 16:14:26.996"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${WordsList}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20200618 16:14:26.996" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20200618 16:14:26.996" endtime="20200618 16:14:26.996"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:26.994" endtime="20200618 16:14:26.996" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Can call Words with str integer argument">
<kw name="Words" library="FakerLibrary">
<doc>:returns: An array of random words. for example: ['Lorem', 'ipsum', 'dolor']</doc>
<arguments>
<arg>nb=10</arg>
</arguments>
<assign>
<var>${WordsList}</var>
</assign>
<msg timestamp="20200618 16:14:26.997" level="INFO">${WordsList} = ['position', 'rule', 'sure', 'great', 'quite', 'although', 'thing', 'attorney', 'remain', 'especially']</msg>
<status status="PASS" starttime="20200618 16:14:26.997" endtime="20200618 16:14:26.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${WordsList}</arg>
</arguments>
<msg timestamp="20200618 16:14:26.998" level="INFO">['position', 'rule', 'sure', 'great', 'quite', 'although', 'thing', 'attorney', 'remain', 'especially']</msg>
<status status="PASS" starttime="20200618 16:14:26.998" endtime="20200618 16:14:26.998"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${WordsList}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20200618 16:14:26.998" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20200618 16:14:26.998" endtime="20200618 16:14:26.998"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:26.996" endtime="20200618 16:14:26.999" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Can call SHA-1">
<kw name="Sha 1" library="FakerLibrary">
<doc>Generate a random SHA1 hash.</doc>
<status status="PASS" starttime="20200618 16:14:26.999" endtime="20200618 16:14:27.000"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Generate a random SHA1 hash.</doc>
<arguments>
<arg>${True}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:27.000" endtime="20200618 16:14:27.000"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Generate a random SHA1 hash.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:27.000" endtime="20200618 16:14:27.000"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Generate a random SHA1 hash.</doc>
<arguments>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:27.001" endtime="20200618 16:14:27.001"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Generate a random SHA1 hash.</doc>
<arguments>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:27.001" endtime="20200618 16:14:27.001"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:26.999" endtime="20200618 16:14:27.001" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Can Lexify">
<kw name="Lexify" library="FakerLibrary">
<doc>Generate a string with each question mark ('?') in ``text``
replaced with a random character from ``letters``.</doc>
<arguments>
<arg>blah???</arg>
</arguments>
<assign>
<var>${lexed}</var>
</assign>
<msg timestamp="20200618 16:14:27.002" level="INFO">${lexed} = blahNqp</msg>
<status status="PASS" starttime="20200618 16:14:27.002" endtime="20200618 16:14:27.003"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${lexed}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20200618 16:14:27.003" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20200618 16:14:27.003" endtime="20200618 16:14:27.003"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${lexed}</arg>
<arg>blah</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:27.003" endtime="20200618 16:14:27.004"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:27.002" endtime="20200618 16:14:27.004" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Can call Password">
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.005" level="INFO">${pass} = LEEPqN3J#4</msg>
<status status="PASS" starttime="20200618 16:14:27.005" endtime="20200618 16:14:27.005"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20200618 16:14:27.006" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20200618 16:14:27.005" endtime="20200618 16:14:27.006"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>${5}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.007" level="INFO">${pass} = $8NQy</msg>
<status status="PASS" starttime="20200618 16:14:27.006" endtime="20200618 16:14:27.007"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20200618 16:14:27.007" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20200618 16:14:27.007" endtime="20200618 16:14:27.007"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.007" level="INFO">${pass} = *7Ojg</msg>
<status status="PASS" starttime="20200618 16:14:27.007" endtime="20200618 16:14:27.007"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20200618 16:14:27.008" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20200618 16:14:27.008" endtime="20200618 16:14:27.008"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>special_chars=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.008" level="INFO">${pass} = Ej8Bcui1rU</msg>
<status status="PASS" starttime="20200618 16:14:27.008" endtime="20200618 16:14:27.008"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>special_chars=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.009" level="INFO">${pass} = Y$64CbEqhy</msg>
<status status="PASS" starttime="20200618 16:14:27.009" endtime="20200618 16:14:27.009"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>digits=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.010" level="INFO">${pass} = Q(2LpCa&amp;F8</msg>
<status status="PASS" starttime="20200618 16:14:27.009" endtime="20200618 16:14:27.010"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>digits=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.010" level="INFO">${pass} = _SrqQozZe_</msg>
<status status="PASS" starttime="20200618 16:14:27.010" endtime="20200618 16:14:27.010"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>digits=True</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.011" level="INFO">${pass} = _w1gq9Wl*_</msg>
<status status="PASS" starttime="20200618 16:14:27.010" endtime="20200618 16:14:27.011"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>digits=False</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.011" level="INFO">${pass} = CxRZcW$rR^</msg>
<status status="PASS" starttime="20200618 16:14:27.011" endtime="20200618 16:14:27.011"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>upper_case=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.012" level="INFO">${pass} = %08WpsMqjD</msg>
<status status="PASS" starttime="20200618 16:14:27.011" endtime="20200618 16:14:27.012"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>lower_case=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.012" level="INFO">${pass} = b*ix6IgET8</msg>
<status status="PASS" starttime="20200618 16:14:27.012" endtime="20200618 16:14:27.012"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>digits=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.013" level="INFO">${pass} = _AfXJDimmA</msg>
<status status="PASS" starttime="20200618 16:14:27.013" endtime="20200618 16:14:27.013"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>5823</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.017" level="INFO">${pass} = sBFm^ewp%dWqo!Gk@*V!$_rhJb#ADmrjTmzJ^fbhL^rYEp+dxvbn#xu#a)qT*ANsdvtYfwduYVSKql#ZE*TsXzh@K*iLXDnw+cjDMFAdRNbatXP!xu*dI^Vwbrt&amp;i!xd*G!E^JECH%w#xj^^%Tc@*UTOWRN@eRn@dI&amp;lEru*giAPPrnQQyYYiCG$IBGAEp@s$cIYLSPq...</msg>
<status status="PASS" starttime="20200618 16:14:27.013" endtime="20200618 16:14:27.017"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5823</arg>
</arguments>
<msg timestamp="20200618 16:14:27.018" level="INFO">Length is 5823</msg>
<status status="PASS" starttime="20200618 16:14:27.017" endtime="20200618 16:14:27.018"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generate a random password of the specified ``length``.</doc>
<arguments>
<arg>${5823}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20200618 16:14:27.022" level="INFO">${pass} = iVApe$FmkJNFE$pxmbCpuJje^GQVQQ&amp;Z!nyPIZ$*MeK!!KqizTaAyZUt!ZLxsel&amp;^!bBL!SPRLlWxgdr!&amp;&amp;htEUoYC^QIGedXBTvP+uBp(!uJ!fEiIeap^jhuGuSXXm_BuoS#cg$DUdRdnzykNshKDsxDxz$#&amp;R_e^QodJJj+lZchlQk)uEzRVfeKtOPg$sQ!ch(Oqsy...</msg>
<status status="PASS" starttime="20200618 16:14:27.018" endtime="20200618 16:14:27.022"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5823</arg>
</arguments>
<msg timestamp="20200618 16:14:27.022" level="INFO">Length is 5823</msg>
<status status="PASS" starttime="20200618 16:14:27.022" endtime="20200618 16:14:27.022"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200618 16:14:27.004" endtime="20200618 16:14:27.022" critical="yes"></status>
</test>
<status status="PASS" starttime="20200618 16:14:26.598" endtime="20200618 16:14:27.023"></status>
</suite>
<suite id="s1-s2" name="Requests" source="/opt/robotframework/tests/requests.robot">
<test id="s1-s2-t1" name="Get Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>google</arg>
<arg>http://www.google.com</arg>
</arguments>
<msg timestamp="20200618 16:14:27.170" level="INFO">Creating Session using : alias=google, url=http://www.google.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:27.169" endtime="20200618 16:14:27.170"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>bing</arg>
<arg>https://www.bing.com</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20200618 16:14:27.170" level="INFO">Creating Session using : alias=bing, url=https://www.bing.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:27.170" endtime="20200618 16:14:27.171"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>google</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:27.171" level="INFO">GET Request using : uri=/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:27.345" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:27.171" endtime="20200618 16:14:27.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:27.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:27.345" endtime="20200618 16:14:27.347"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bing</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:27.349" level="INFO">GET Request using : uri=/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:27.919" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:27.348" endtime="20200618 16:14:27.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:27.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:27.919" endtime="20200618 16:14:27.920"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:27.169" endtime="20200618 16:14:27.920" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Get Requests with Url Parameters">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:27.922" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:27.922" endtime="20200618 16:14:27.923"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20200618 16:14:27.924" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20200618 16:14:27.923" endtime="20200618 16:14:27.924"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:27.925" level="INFO">GET Request using : uri=/get, params={'key': 'value', 'key2': 'value2'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:28.476" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:27.924" endtime="20200618 16:14:28.476"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:28.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:28.477" endtime="20200618 16:14:28.479"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20200618 16:14:28.481" level="INFO">To JSON using : content={
  "args": {
    "key": "value", 
    "key2": "value2"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "0", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.23.0", 
    "X-Amzn-Trace-Id": "Root=1-5eeb9291-03fc246ea4d6a90e1279620c", 
    "X-B3-Parentspanid": "d9b7d52ca60ba397", 
    "X-B3-Sampled": "0", 
    "X-B3-Spanid": "cd900fe8d47f9aad", 
    "X-B3-Traceid": "de53e57f8a2cf766d9b7d52ca60ba397", 
    "X-Envoy-External-Address": "177.5.2.250", 
    "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=e2939f9229eef4405e235e5e53fc1b145fc8f907cafc414a01a4014127f57742;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
  }, 
  "origin": "177.5.2.250,10.100.91.201", 
  "url": "http://httpbin.org/get?key=value&amp;key2=value2"
}
 </msg>
<msg timestamp="20200618 16:14:28.481" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200618 16:14:28.481" level="INFO">${jsondata} = {'args': {'key': 'value', 'key2': 'value2'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '0', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.23.0', 'X-A...</msg>
<status status="PASS" starttime="20200618 16:14:28.480" endtime="20200618 16:14:28.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${jsondata['args']}</arg>
<arg>${params}</arg>
</arguments>
<msg timestamp="20200618 16:14:28.483" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:28.482" endtime="20200618 16:14:28.484"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:27.921" endtime="20200618 16:14:28.484" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Get HTTPS &amp; Verify Cert">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>https://httpbin.org</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20200618 16:14:28.488" level="INFO">Creating Session using : alias=httpbin, url=https://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:28.487" endtime="20200618 16:14:28.489"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:28.491" level="INFO">GET Request using : uri=/get, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:29.444" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:28.490" endtime="20200618 16:14:29.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:29.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:29.445" endtime="20200618 16:14:29.447"></status>
</kw>
<tags>
<tag>get</tag>
<tag>get-cert</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:28.485" endtime="20200618 16:14:29.448" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Post Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:29.452" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:29.451" endtime="20200618 16:14:29.453"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20200618 16:14:29.455" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20200618 16:14:29.453" endtime="20200618 16:14:29.455"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:29.457" level="INFO">POST Request using : uri=/post, params={'key': 'value', 'key2': 'value2'}, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:29.832" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:29.456" endtime="20200618 16:14:29.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:29.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:29.832" endtime="20200618 16:14:29.833"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:29.449" endtime="20200618 16:14:29.833" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Post Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:29.834" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:29.834" endtime="20200618 16:14:29.834"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:29.835" level="INFO">POST Request using : uri=/post, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:30.168" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:29.835" endtime="20200618 16:14:30.168"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:30.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.168" endtime="20200618 16:14:30.170"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:29.833" endtime="20200618 16:14:30.171" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Put Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:30.174" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:30.174" endtime="20200618 16:14:30.176"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:30.178" level="INFO">PUT Request using : uri=/put, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:30.519" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.177" endtime="20200618 16:14:30.520"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:30.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.520" endtime="20200618 16:14:30.526"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:30.172" endtime="20200618 16:14:30.526" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Post Request With No Dictionary">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:30.531" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:30.529" endtime="20200618 16:14:30.532"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>some content</arg>
</arguments>
<msg timestamp="20200618 16:14:30.536" level="INFO">${data} = some content</msg>
<status status="PASS" starttime="20200618 16:14:30.533" endtime="20200618 16:14:30.537"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:30.539" level="INFO">POST Request using : uri=/post, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:30.863" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.537" endtime="20200618 16:14:30.863"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:30.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.863" endtime="20200618 16:14:30.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:30.864" endtime="20200618 16:14:30.865"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:30.527" endtime="20200618 16:14:30.865" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Put Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:30.866" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:30.866" endtime="20200618 16:14:30.867"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20200618 16:14:30.867" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20200618 16:14:30.867" endtime="20200618 16:14:30.868"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:30.868" level="INFO">PUT Request using : uri=/put, params={'key': 'value', 'key2': 'value2'}, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:31.228" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:30.868" endtime="20200618 16:14:31.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:31.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:31.229" endtime="20200618 16:14:31.231"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:30.865" endtime="20200618 16:14:31.232" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Put Request With No Dictionary">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:31.236" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:31.235" endtime="20200618 16:14:31.237"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>some content</arg>
</arguments>
<msg timestamp="20200618 16:14:31.241" level="INFO">${data} = some content</msg>
<status status="PASS" starttime="20200618 16:14:31.238" endtime="20200618 16:14:31.241"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:31.243" level="INFO">PUT Request using : uri=/put, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:31.562" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:31.242" endtime="20200618 16:14:31.562"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:31.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:31.563" endtime="20200618 16:14:31.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:31.595" endtime="20200618 16:14:31.595"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:31.233" endtime="20200618 16:14:31.596" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Post Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:31.597" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:31.597" endtime="20200618 16:14:31.598"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:31.598" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20200618 16:14:31.598" endtime="20200618 16:14:31.598"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200618 16:14:31.599" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20200618 16:14:31.599" endtime="20200618 16:14:31.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:31.600" level="INFO">POST Request using : uri=/post, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded'} 
data=name=bulkan&amp;surname=evcimen 
json=None</msg>
<msg timestamp="20200618 16:14:31.917" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:31.599" endtime="20200618 16:14:31.917"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:31.918" endtime="20200618 16:14:31.920"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:31.921" endtime="20200618 16:14:31.922"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:31.596" endtime="20200618 16:14:31.923" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Post With Unicode Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:31.927" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:31.926" endtime="20200618 16:14:31.928"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=度假村</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:31.930" level="INFO">&amp;{data} = { name=度假村 }</msg>
<status status="PASS" starttime="20200618 16:14:31.929" endtime="20200618 16:14:31.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200618 16:14:31.933" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20200618 16:14:31.932" endtime="20200618 16:14:31.933"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:31.935" level="INFO">POST Request using : uri=/post, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded'} 
data=name=%E5%BA%A6%E5%81%87%E6%9D%91 
json=None</msg>
<msg timestamp="20200618 16:14:32.298" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:31.934" endtime="20200618 16:14:32.298"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>度假村</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:32.298" endtime="20200618 16:14:32.298"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:31.924" endtime="20200618 16:14:32.298" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="Post Request With Unicode Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:32.299" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:32.299" endtime="20200618 16:14:32.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=度假村</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:32.300" level="INFO">&amp;{data} = { name=度假村 }</msg>
<status status="PASS" starttime="20200618 16:14:32.300" endtime="20200618 16:14:32.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200618 16:14:32.301" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20200618 16:14:32.300" endtime="20200618 16:14:32.301"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:32.301" level="INFO">POST Request using : uri=/post, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded'} 
data=name=%E5%BA%A6%E5%81%87%E6%9D%91 
json=None</msg>
<msg timestamp="20200618 16:14:32.742" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:32.301" endtime="20200618 16:14:32.742"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>度假村</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:32.743" endtime="20200618 16:14:32.745"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:32.299" endtime="20200618 16:14:32.745" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Post Request With Data and File">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:32.749" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:32.748" endtime="20200618 16:14:32.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=mallikarjunarao</arg>
<arg>surname=kosuri</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:32.753" level="INFO">&amp;{data} = { name=mallikarjunarao | surname=kosuri }</msg>
<status status="PASS" starttime="20200618 16:14:32.751" endtime="20200618 16:14:32.753"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>foobar.txt</arg>
<arg>content=foobar</arg>
</arguments>
<msg timestamp="20200618 16:14:32.756" level="INFO" html="yes">Created file '&lt;a href="file:///opt/robotframework/temp/foobar.txt"&gt;/opt/robotframework/temp/foobar.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200618 16:14:32.753" endtime="20200618 16:14:32.756"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>foobar.txt</arg>
</arguments>
<assign>
<var>${file_data}</var>
</assign>
<msg timestamp="20200618 16:14:32.758" level="INFO" html="yes">Getting file '&lt;a href="file:///opt/robotframework/temp/foobar.txt"&gt;/opt/robotframework/temp/foobar.txt&lt;/a&gt;'.</msg>
<msg timestamp="20200618 16:14:32.759" level="INFO">${file_data} = foobar</msg>
<status status="PASS" starttime="20200618 16:14:32.757" endtime="20200618 16:14:32.759"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>file=${file_data}</arg>
</arguments>
<assign>
<var>&amp;{files}</var>
</assign>
<msg timestamp="20200618 16:14:32.762" level="INFO">&amp;{files} = { file=foobar }</msg>
<status status="PASS" starttime="20200618 16:14:32.760" endtime="20200618 16:14:32.763"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>files=${files}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:32.765" level="INFO">POST Request using : uri=/post, params=None, files={'file': 'foobar'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:33.407" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:32.763" endtime="20200618 16:14:33.408"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:33.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:33.408" endtime="20200618 16:14:33.410"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:32.746" endtime="20200618 16:14:33.411" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Put Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:33.414" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:33.413" endtime="20200618 16:14:33.416"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:33.419" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20200618 16:14:33.417" endtime="20200618 16:14:33.419"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200618 16:14:33.421" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20200618 16:14:33.419" endtime="20200618 16:14:33.421"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:33.423" level="INFO">PUT Request using : uri=/put, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded'} 
data=name=bulkan&amp;surname=evcimen 
json=None</msg>
<msg timestamp="20200618 16:14:33.852" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:33.421" endtime="20200618 16:14:33.852"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:33.853" endtime="20200618 16:14:33.853"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:33.853" endtime="20200618 16:14:33.854"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:33.411" endtime="20200618 16:14:33.854" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Head Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:33.855" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:33.855" endtime="20200618 16:14:33.856"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/headers</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:33.856" level="INFO">HEAD Request using : uri=/headers, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:34.209" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:33.856" endtime="20200618 16:14:34.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:34.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.210" endtime="20200618 16:14:34.212"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:33.854" endtime="20200618 16:14:34.213" critical="yes"></status>
</test>
<test id="s1-s2-t16" name="Options Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:34.216" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:34.215" endtime="20200618 16:14:34.217"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/headers</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:34.219" level="INFO">OPTIONS Request using : uri=/headers, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:34.599" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.218" endtime="20200618 16:14:34.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:34.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.600" endtime="20200618 16:14:34.602"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.headers}</arg>
<arg>allow</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:34.602" endtime="20200618 16:14:34.603"></status>
</kw>
<tags>
<tag>options</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:34.213" endtime="20200618 16:14:34.604" critical="yes"></status>
</test>
<test id="s1-s2-t17" name="Delete Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:34.608" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:34.607" endtime="20200618 16:14:34.610"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20200618 16:14:34.612" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20200618 16:14:34.610" endtime="20200618 16:14:34.612"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:34.614" level="INFO">DELETE Request using : uri=/delete, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:34.932" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.613" endtime="20200618 16:14:34.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:34.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.933" endtime="20200618 16:14:34.934"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:34.605" endtime="20200618 16:14:34.935" critical="yes"></status>
</test>
<test id="s1-s2-t18" name="Delete Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:34.939" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:34.938" endtime="20200618 16:14:34.940"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:34.941" level="INFO">DELETE Request using : uri=/delete, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:35.278" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:34.940" endtime="20200618 16:14:35.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:35.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:35.279" endtime="20200618 16:14:35.281"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:34.936" endtime="20200618 16:14:35.281" critical="yes"></status>
</test>
<test id="s1-s2-t19" name="Delete Request With Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:35.285" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:35.285" endtime="20200618 16:14:35.287"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:35.289" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20200618 16:14:35.287" endtime="20200618 16:14:35.289"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:35.291" level="INFO">DELETE Request using : uri=/delete, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:35.609" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:35.289" endtime="20200618 16:14:35.609"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:35.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:35.610" endtime="20200618 16:14:35.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20200618 16:14:35.613" level="INFO">{
  "args": {}, 
  "data": "name=bulkan&amp;surname=evcimen", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "27", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.23.0", 
    "X-Amzn-Trace-Id": "Root=1-5eeb9298-2c61a521531d32f4064a113b", 
    "X-B3-Parentspanid": "52952760d513ce22", 
    "X-B3-Sampled": "0", 
    "X-B3-Spanid": "1f83f0e4342a0a1e", 
    "X-B3-Traceid": "2084a9b9e6cdf34152952760d513ce22", 
    "X-Envoy-External-Address": "177.5.2.250", 
    "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=e2939f9229eef4405e235e5e53fc1b145fc8f907cafc414a01a4014127f57742;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
  }, 
  "json": null, 
  "origin": "177.5.2.250,10.100.91.201", 
  "url": "http://httpbin.org/delete"
}
</msg>
<status status="PASS" starttime="20200618 16:14:35.612" endtime="20200618 16:14:35.614"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:35.614" endtime="20200618 16:14:35.615"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:35.615" endtime="20200618 16:14:35.616"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:35.282" endtime="20200618 16:14:35.617" critical="yes"></status>
</test>
<test id="s1-s2-t20" name="Patch Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:35.620" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:35.620" endtime="20200618 16:14:35.621"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200618 16:14:35.622" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20200618 16:14:35.622" endtime="20200618 16:14:35.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200618 16:14:35.624" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20200618 16:14:35.623" endtime="20200618 16:14:35.624"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/patch</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:35.625" level="INFO">PATCH Request using : uri=/patch, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded'} 
data=name=bulkan&amp;surname=evcimen 
json=None</msg>
<msg timestamp="20200618 16:14:35.935" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:35.624" endtime="20200618 16:14:35.935"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:35.935" endtime="20200618 16:14:35.936"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:35.936" endtime="20200618 16:14:35.936"></status>
</kw>
<tags>
<tag>patch</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:35.618" endtime="20200618 16:14:35.936" critical="yes"></status>
</test>
<test id="s1-s2-t21" name="Get Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:35.938" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:35.937" endtime="20200618 16:14:35.938"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:35.939" level="INFO">GET Request using : uri=/redirect/1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:36.471" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:35.938" endtime="20200618 16:14:36.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:36.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:36.472" endtime="20200618 16:14:36.474"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:36.476" level="INFO">GET Request using : uri=/redirect/1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:36.845" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:36.475" endtime="20200618 16:14:36.845"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:36.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:36.845" endtime="20200618 16:14:36.846"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:35.937" endtime="20200618 16:14:36.846" critical="yes"></status>
</test>
<test id="s1-s2-t22" name="Get Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:36.847" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:36.847" endtime="20200618 16:14:36.847"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:36.848" level="INFO">GET Request using : uri=/redirect/1, params=None, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:37.203" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:36.847" endtime="20200618 16:14:37.204"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200618 16:14:37.206" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20200618 16:14:37.204" endtime="20200618 16:14:37.206"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:37.206" endtime="20200618 16:14:37.207"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:36.846" endtime="20200618 16:14:37.208" critical="yes"></status>
</test>
<test id="s1-s2-t23" name="Options Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:37.212" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:37.211" endtime="20200618 16:14:37.213"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:37.215" level="INFO">OPTIONS Request using : uri=/redirect/1, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:37.584" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:37.214" endtime="20200618 16:14:37.585"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:37.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:37.585" endtime="20200618 16:14:37.587"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:37.589" level="INFO">OPTIONS Request using : uri=/redirect/1, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:37.801" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:37.588" endtime="20200618 16:14:37.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:37.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:37.802" endtime="20200618 16:14:37.803"></status>
</kw>
<tags>
<tag>options</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:37.209" endtime="20200618 16:14:37.803" critical="yes"></status>
</test>
<test id="s1-s2-t24" name="Head Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:37.805" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:37.805" endtime="20200618 16:14:37.806"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:37.807" level="INFO">HEAD Request using : uri=/redirect/1, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:38.431" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:37.807" endtime="20200618 16:14:38.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:38.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:38.432" endtime="20200618 16:14:38.434"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:37.804" endtime="20200618 16:14:38.434" critical="yes"></status>
</test>
<test id="s1-s2-t25" name="Head Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:38.438" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:38.438" endtime="20200618 16:14:38.440"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:38.442" level="INFO">HEAD Request using : uri=/redirect/1, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:39.027" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:38.441" endtime="20200618 16:14:39.027"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200618 16:14:39.029" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20200618 16:14:39.028" endtime="20200618 16:14:39.029"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:39.030" endtime="20200618 16:14:39.031"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:39.033" level="INFO">HEAD Request using : uri=/redirect/1, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:39.298" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:39.031" endtime="20200618 16:14:39.298"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200618 16:14:39.299" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20200618 16:14:39.298" endtime="20200618 16:14:39.299"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:39.299" endtime="20200618 16:14:39.299"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:38.435" endtime="20200618 16:14:39.299" critical="yes"></status>
</test>
<test id="s1-s2-t26" name="Post Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
</arguments>
<msg timestamp="20200618 16:14:39.300" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:39.300" endtime="20200618 16:14:39.301"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:39.301" level="INFO">POST Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:40.118" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:39.301" endtime="20200618 16:14:40.118"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:40.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:40.118" endtime="20200618 16:14:40.119"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:40.119" level="INFO">POST Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:40.654" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:40.119" endtime="20200618 16:14:40.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:40.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:40.655" endtime="20200618 16:14:40.657"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:39.299" endtime="20200618 16:14:40.657" critical="yes"></status>
</test>
<test id="s1-s2-t27" name="Post Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:40.661" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:40.660" endtime="20200618 16:14:40.662"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:40.665" level="INFO">POST Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:41.202" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:40.663" endtime="20200618 16:14:41.203"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200618 16:14:41.205" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20200618 16:14:41.203" endtime="20200618 16:14:41.205"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:41.206" endtime="20200618 16:14:41.207"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:40.658" endtime="20200618 16:14:41.207" critical="yes"></status>
</test>
<test id="s1-s2-t28" name="Put Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20200618 16:14:41.211" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20200618 16:14:41.210" endtime="20200618 16:14:41.212"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:41.214" level="INFO">PUT Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:41.941" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:41.213" endtime="20200618 16:14:41.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:41.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:41.942" endtime="20200618 16:14:41.943"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:41.945" level="INFO">PUT Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:42.449" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:41.944" endtime="20200618 16:14:42.449"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:42.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:42.450" endtime="20200618 16:14:42.451"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:41.208" endtime="20200618 16:14:42.452" critical="yes"></status>
</test>
<test id="s1-s2-t29" name="Put Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
</arguments>
<msg timestamp="20200618 16:14:42.456" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:42.455" endtime="20200618 16:14:42.457"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:42.459" level="INFO">PUT Request using : uri=/HTTP/300/302.html, params=None, files=None, allow_redirects=False, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:43.128" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:42.457" endtime="20200618 16:14:43.128"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200618 16:14:43.130" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20200618 16:14:43.129" endtime="20200618 16:14:43.130"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:43.131" endtime="20200618 16:14:43.132"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:42.453" endtime="20200618 16:14:43.132" critical="yes"></status>
</test>
<test id="s1-s2-t30" name="Do Not Pretty Print a JSON object">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:43.136" endtime="20200618 16:14:43.136"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:43.138" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:43.137" endtime="20200618 16:14:43.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_one=true</arg>
<arg>key_two=this is a test string</arg>
</arguments>
<assign>
<var>&amp;{var}</var>
</assign>
<msg timestamp="20200618 16:14:43.141" level="INFO">&amp;{var} = { key_one=true | key_two=this is a test string }</msg>
<status status="PASS" starttime="20200618 16:14:43.140" endtime="20200618 16:14:43.141"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${var}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:43.144" level="INFO">GET Request using : uri=/get, params={'key_one': 'true', 'key_two': 'this is a test string'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:43.632" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:43.142" endtime="20200618 16:14:43.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200618 16:14:43.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200618 16:14:43.633" endtime="20200618 16:14:43.634"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20200618 16:14:43.636" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "0", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.23.0", 
    "X-Amzn-Trace-Id": "Root=1-5eeb92a0-9e261d6a5fa4f6780ba38108", 
    "X-B3-Parentspanid": "3d34a9589d958772", 
    "X-B3-Sampled": "0", 
    "X-B3-Spanid": "fb3305db3efa2838", 
    "X-B3-Traceid": "86955c9f5dc15c963d34a9589d958772", 
    "X-Envoy-External-Address": "177.5.2.250", 
    "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=7b00c563401d6e2c1fb999294d91ea3e821bf648e74eae0c14949084a32fe3b5;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
  }, 
  "origin": "177.5.2.250,10.100.91.201", 
  "url": "http://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20200618 16:14:43.636" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200618 16:14:43.637" level="INFO">${jsondata} = {'args': {'key_one': 'true', 'key_two': 'this is a test string'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '0', 'Host': 'httpbin.org', 'User-Agent': 'python-r...</msg>
<status status="PASS" starttime="20200618 16:14:43.635" endtime="20200618 16:14:43.637"></status>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<doc>Fails if the given dictionaries are not equal.</doc>
<arguments>
<arg>${jsondata['args']}</arg>
<arg>${var}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:43.637" endtime="20200618 16:14:43.639"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:43.133" endtime="20200618 16:14:43.639" critical="yes"></status>
</test>
<test id="s1-s2-t31" name="Pretty Print a JSON object">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:43.643" endtime="20200618 16:14:43.643"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:43.645" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:43.644" endtime="20200618 16:14:43.646"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_one=true</arg>
<arg>key_two=this is a test string</arg>
</arguments>
<assign>
<var>&amp;{var}</var>
</assign>
<msg timestamp="20200618 16:14:43.648" level="INFO">&amp;{var} = { key_one=true | key_two=this is a test string }</msg>
<status status="PASS" starttime="20200618 16:14:43.647" endtime="20200618 16:14:43.648"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${var}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:43.650" level="INFO">GET Request using : uri=/get, params={'key_one': 'true', 'key_two': 'this is a test string'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:44.025" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:43.649" endtime="20200618 16:14:44.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20200618 16:14:44.027" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:44.026" endtime="20200618 16:14:44.027"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20200618 16:14:44.029" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "0", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.23.0", 
    "X-Amzn-Trace-Id": "Root=1-5eeb92a1-4af44d48ffbabd84e9824f80", 
    "X-B3-Parentspanid": "a3ecdaa47d487e4f", 
    "X-B3-Sampled": "0", 
    "X-B3-Spanid": "de19de7908e84b71", 
    "X-B3-Traceid": "bd1f885f4ba2d117a3ecdaa47d487e4f", 
    "X-Envoy-External-Address": "177.5.2.250", 
    "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=7b00c563401d6e2c1fb999294d91ea3e821bf648e74eae0c14949084a32fe3b5;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
  }, 
  "origin": "177.5.2.250,10.100.91.201", 
  "url": "http://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20200618 16:14:44.030" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20200618 16:14:44.030" level="INFO">${output} = {
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Content-Leng...</msg>
<status status="PASS" starttime="20200618 16:14:44.028" endtime="20200618 16:14:44.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200618 16:14:44.032" level="INFO">{
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Content-Length": "0",
        "Host": "httpbin.org",
        "User-Agent": "python-requests/2.23.0",
        "X-Amzn-Trace-Id": "Root=1-5eeb92a1-4af44d48ffbabd84e9824f80",
        "X-B3-Parentspanid": "a3ecdaa47d487e4f",
        "X-B3-Sampled": "0",
        "X-B3-Spanid": "de19de7908e84b71",
        "X-B3-Traceid": "bd1f885f4ba2d117a3ecdaa47d487e4f",
        "X-Envoy-External-Address": "177.5.2.250",
        "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=7b00c563401d6e2c1fb999294d91ea3e821bf648e74eae0c14949084a32fe3b5;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
    },
    "origin": "177.5.2.250,10.100.91.201",
    "url": "http://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}</msg>
<status status="PASS" starttime="20200618 16:14:44.031" endtime="20200618 16:14:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_one": "true"</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.033" endtime="20200618 16:14:44.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_two": "this is a test string"</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.034" endtime="20200618 16:14:44.035"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>{u'key_two': u'this is a test string', u'key_one': u'true'}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.036" endtime="20200618 16:14:44.037"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:43.640" endtime="20200618 16:14:44.037" critical="yes"></status>
</test>
<test id="s1-s2-t32" name="Set Pretty Print to non-Boolean value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.040" endtime="20200618 16:14:44.041"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20200618 16:14:44.042" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200618 16:14:44.042" endtime="20200618 16:14:44.044"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_one=true</arg>
<arg>key_two=this is a test string</arg>
</arguments>
<assign>
<var>&amp;{var}</var>
</assign>
<msg timestamp="20200618 16:14:44.046" level="INFO">&amp;{var} = { key_one=true | key_two=this is a test string }</msg>
<status status="PASS" starttime="20200618 16:14:44.045" endtime="20200618 16:14:44.046"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${var}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200618 16:14:44.048" level="INFO">GET Request using : uri=/get, params={'key_one': 'true', 'key_two': 'this is a test string'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20200618 16:14:44.394" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:44.047" endtime="20200618 16:14:44.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20200618 16:14:44.396" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200618 16:14:44.395" endtime="20200618 16:14:44.396"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
<arg>pretty_print="Hello"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20200618 16:14:44.399" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "0", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.23.0", 
    "X-Amzn-Trace-Id": "Root=1-5eeb92a1-efd442e04f735478d20919b4", 
    "X-B3-Parentspanid": "f755e4d44dcec26f", 
    "X-B3-Sampled": "0", 
    "X-B3-Spanid": "a79b3d03b8501308", 
    "X-B3-Traceid": "c662bcee882c50b4f755e4d44dcec26f", 
    "X-Envoy-External-Address": "177.5.2.250", 
    "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=ea1c0e0fbd1a2a4dcfdc36e743ce618cf614b92afb4e5a6b19e7ba9a2ac7ecdb;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
  }, 
  "origin": "177.5.2.250,10.100.91.201", 
  "url": "http://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20200618 16:14:44.399" level="INFO">To JSON using : pretty_print="Hello" </msg>
<msg timestamp="20200618 16:14:44.399" level="INFO">${output} = {
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Content-Leng...</msg>
<status status="PASS" starttime="20200618 16:14:44.397" endtime="20200618 16:14:44.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200618 16:14:44.401" level="INFO">{
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Content-Length": "0",
        "Host": "httpbin.org",
        "User-Agent": "python-requests/2.23.0",
        "X-Amzn-Trace-Id": "Root=1-5eeb92a1-efd442e04f735478d20919b4",
        "X-B3-Parentspanid": "f755e4d44dcec26f",
        "X-B3-Sampled": "0",
        "X-B3-Spanid": "a79b3d03b8501308",
        "X-B3-Traceid": "c662bcee882c50b4f755e4d44dcec26f",
        "X-Envoy-External-Address": "177.5.2.250",
        "X-Forwarded-Client-Cert": "By=spiffe://cluster.local/ns/httpbin-istio/sa/httpbin;Hash=ea1c0e0fbd1a2a4dcfdc36e743ce618cf614b92afb4e5a6b19e7ba9a2ac7ecdb;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
    },
    "origin": "177.5.2.250,10.100.91.201",
    "url": "http://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}</msg>
<status status="PASS" starttime="20200618 16:14:44.400" endtime="20200618 16:14:44.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_one": "true"</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.402" endtime="20200618 16:14:44.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_two": "this is a test string"</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.403" endtime="20200618 16:14:44.404"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>{u'key_two': u'this is a test string', u'key_one': u'true'}</arg>
</arguments>
<status status="PASS" starttime="20200618 16:14:44.404" endtime="20200618 16:14:44.405"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20200618 16:14:44.038" endtime="20200618 16:14:44.406" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20200618 16:14:44.417" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20200618 16:14:44.416" endtime="20200618 16:14:44.426"></status>
</kw>
<status status="PASS" starttime="20200618 16:14:27.024" endtime="20200618 16:14:44.426"></status>
</suite>
<suite id="s1-s3" name="Simpletest" source="/opt/robotframework/tests/simpletest.robot">
<test id="s1-s3-t1" name="Visit Baidu">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>https://www.baidu.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200618 16:14:44.599" level="INFO">Opening browser 'firefox' to base url 'https://www.baidu.com'.</msg>
<msg timestamp="20200618 16:14:44.606" level="INFO">Firefox driver log is always forced to to: /opt/robotframework/reports/geckodriver-5.log</msg>
<msg timestamp="20200618 16:14:59.123" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:40893\r\nAccept-Encoding: identity\r\nContent-Length: 2976\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "firefox", "acceptInsecureCerts": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIANaB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIANaB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}, "desiredCapabilities": {"browserName": "firefox", "acceptInsecureCerts": true, "marionette": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIANaB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIANaB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 708
header: date: Thu, 18 Jun 2020 16:14:45 GMT
send: b'POST /session/4ed661ce-a8f5-4168-b610-637e6511023c/timeouts HTTP/1.1\r\nHost: 127.0.0.1:40893\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:14:51 GMT
send: b'POST /session/4ed661ce-a8f5-4168-b610-637e6511023c/timeouts HTTP/1.1\r\nHost: 127.0.0.1:40893\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:14:51 GMT
send: b'POST /session/4ed661ce-a8f5-4168-b610-637e6511023c/url HTTP/1.1\r\nHost: 127.0.0.1:40893\r\nAccept-Encoding: identity\r\nContent-Length: 32\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.baidu.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:14:51 GMT</msg>
<status status="PASS" starttime="20200618 16:14:44.599" endtime="20200618 16:14:59.124"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200618 16:14:59.185" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20200618 16:14:59.185" level="INFO">send: b'GET /session/4ed661ce-a8f5-4168-b610-637e6511023c/screenshot HTTP/1.1\r\nHost: 127.0.0.1:40893\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 40120
header: date: Thu, 18 Jun 2020 16:14:59 GMT</msg>
<status status="PASS" starttime="20200618 16:14:59.124" endtime="20200618 16:14:59.185"></status>
</kw>
<status status="PASS" starttime="20200618 16:14:44.598" endtime="20200618 16:14:59.186" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Visit Bing">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>https://www.bing.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200618 16:14:59.187" level="INFO">Opening browser 'firefox' to base url 'https://www.bing.com'.</msg>
<msg timestamp="20200618 16:14:59.188" level="INFO">Firefox driver log is always forced to to: /opt/robotframework/reports/geckodriver-6.log</msg>
<msg timestamp="20200618 16:15:04.252" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:54851\r\nAccept-Encoding: identity\r\nContent-Length: 2976\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "firefox", "acceptInsecureCerts": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOCB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOCB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}, "desiredCapabilities": {"browserName": "firefox", "acceptInsecureCerts": true, "marionette": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOCB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOCB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 709
header: date: Thu, 18 Jun 2020 16:15:00 GMT
send: b'POST /session/1f89fe21-902c-421a-b910-af3d3ea18f79/timeouts HTTP/1.1\r\nHost: 127.0.0.1:54851\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:02 GMT
send: b'POST /session/1f89fe21-902c-421a-b910-af3d3ea18f79/timeouts HTTP/1.1\r\nHost: 127.0.0.1:54851\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:02 GMT
send: b'POST /session/1f89fe21-902c-421a-b910-af3d3ea18f79/url HTTP/1.1\r\nHost: 127.0.0.1:54851\r\nAccept-Encoding: identity\r\nContent-Length: 31\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.bing.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:02 GMT</msg>
<status status="PASS" starttime="20200618 16:14:59.187" endtime="20200618 16:15:04.257"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200618 16:15:04.798" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20200618 16:15:04.799" level="INFO">send: b'GET /session/1f89fe21-902c-421a-b910-af3d3ea18f79/screenshot HTTP/1.1\r\nHost: 127.0.0.1:54851\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 3999004
header: date: Thu, 18 Jun 2020 16:15:04 GMT</msg>
<status status="PASS" starttime="20200618 16:15:04.257" endtime="20200618 16:15:04.799"></status>
</kw>
<status status="PASS" starttime="20200618 16:14:59.186" endtime="20200618 16:15:04.799" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Visit Google">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>https://www.google.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200618 16:15:04.804" level="INFO">Opening browser 'firefox' to base url 'https://www.google.com'.</msg>
<msg timestamp="20200618 16:15:04.804" level="INFO">Firefox driver log is always forced to to: /opt/robotframework/reports/geckodriver-7.log</msg>
<msg timestamp="20200618 16:15:11.565" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:55019\r\nAccept-Encoding: identity\r\nContent-Length: 2976\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "firefox", "acceptInsecureCerts": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOKB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOKB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}, "desiredCapabilities": {"browserName": "firefox", "acceptInsecureCerts": true, "marionette": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOKB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOKB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 709
header: date: Thu, 18 Jun 2020 16:15:05 GMT
send: b'POST /session/afec4ed7-e182-4e5a-8242-a9f5bea8ae56/timeouts HTTP/1.1\r\nHost: 127.0.0.1:55019\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:08 GMT
send: b'POST /session/afec4ed7-e182-4e5a-8242-a9f5bea8ae56/timeouts HTTP/1.1\r\nHost: 127.0.0.1:55019\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:08 GMT
send: b'POST /session/afec4ed7-e182-4e5a-8242-a9f5bea8ae56/url HTTP/1.1\r\nHost: 127.0.0.1:55019\r\nAccept-Encoding: identity\r\nContent-Length: 33\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.google.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:08 GMT</msg>
<status status="PASS" starttime="20200618 16:15:04.804" endtime="20200618 16:15:11.568"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200618 16:15:11.647" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20200618 16:15:11.648" level="INFO">send: b'GET /session/afec4ed7-e182-4e5a-8242-a9f5bea8ae56/screenshot HTTP/1.1\r\nHost: 127.0.0.1:55019\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 37048
header: date: Thu, 18 Jun 2020 16:15:11 GMT</msg>
<status status="PASS" starttime="20200618 16:15:11.568" endtime="20200618 16:15:11.648"></status>
</kw>
<status status="PASS" starttime="20200618 16:15:04.803" endtime="20200618 16:15:11.648" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Visit Yahoo">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>https://search.yahoo.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200618 16:15:11.665" level="INFO">Opening browser 'firefox' to base url 'https://search.yahoo.com'.</msg>
<msg timestamp="20200618 16:15:11.678" level="INFO">Firefox driver log is always forced to to: /opt/robotframework/reports/geckodriver-8.log</msg>
<msg timestamp="20200618 16:15:21.921" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:49615\r\nAccept-Encoding: identity\r\nContent-Length: 2976\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "firefox", "acceptInsecureCerts": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOaB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOaB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}, "desiredCapabilities": {"browserName": "firefox", "acceptInsecureCerts": true, "marionette": true, "moz:firefoxOptions": {"profile": "UEsDBBQAAAAIAOaB0lA+3NKsfgMAAM0MAAAHAAAAdXNlci5qc6VWTW/UMBC98ytQTyCx1rbABU6lFAkJUcSq4mg59mTjrmMbe7zp/nvGyaYsbb6AWz7e89hvZt44RQjcByhfnBXBNfTGlKtZo61yDVOp9gysKAyos1fPMSR4+f5ZesoxAiGEZE/ApTBxBG2hQVGwFAzhzkThEr4rjLC7sym8F1tYtn5EETB5lhmEXE+jKlfDEblgL49Z3O3p5FoBqyM6266it9YFGFmAPqkb+6MVOJ6vmbYY3O33L9Phc1Jqcc9lFSgwjzJoj5wU56jrHPT1epiwDBnAu4BcGMPvIod7CR61s3Ew6XdiL7plmetgLFau+Wyv6NEZGCRZwMaFHZOCKHtY5XjCrAiw13ImrxFkChoPTMa+HEeAj5PTgJFZr9lSm2IyoZTO5xQzizRQqECHC1zIrCBPlNsUERSXEHBYzRNSjClHfCBp+gBhhtXpwa3IsnLYgx0JJLxnySvqVCYSumEFT0CLWk3p6I04gLo+X2++OqRcEuHNCNg11jihqDAtaRzasvlRgd1k9bXdTse6vv1yyfp2m7SjFvmadVmYsy5td1THYKnsycS6JF/MYcmSOo8cB7uyJPxIpfagAEJlZQBB0k4/6RDxkrSQI230YEOihPaZVFtoiqeMWphGhKV2CiLI6lgWc1BTxuRzc/f2PuajEGO2DiSnJBXayi/J27gMIlYzUSowhskK5O4jlCIZ/ND9mabRDImMjm1v7JVxceYoJ+gbyvgwmBQRnXdmVSsQBqvunS1ytgl+8rlVrv+R3Ucvc0F9T3+/feO22/xRdp7+F/vwzmh5YPnjJhW1bvP8v/xv7cfL3w09tAzs0TkTGTmEC8eNT15f8ugjB2sNtG1rRXPGbnlWfjhG9gjbFm5roh878kYSO7vu+XoUXhgnd0ZHnK6IE0Zb4Feu9mTthTZ5AFq9rdAcZqlLLPwp3JJ/l4fb0UY6GfxTqvajvnP51dEHVzRiMcXhlXtKhUjXtkrH6rDKvz3NxJUBu8VsCRdv3/5J65emqUX5MMY1vDhw1XnC4N48WYzHmLub104Js/DmUWoD9MRc0NQWvKvRfJmawUcMWiJ/TBsKlW+NlqywhrqAsGlfR+TKZb7TyI6y9eP0WMqDB+8pCIYiYDiwTor25Bdz2EmRnsID3LXjbHAn916T7VO2WD4y1QS5PzF+Jh3GIvymNJWmMLmLBhi/AFBLAQIUAxQAAAAIAOaB0lA+3NKsfgMAAM0MAAAHAAAAAAAAAAAAAACkgQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAKMDAAAAAA=="}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 709
header: date: Thu, 18 Jun 2020 16:15:12 GMT
send: b'POST /session/31ae4cae-458f-4365-96d9-c325533731d1/timeouts HTTP/1.1\r\nHost: 127.0.0.1:49615\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:16 GMT
send: b'POST /session/31ae4cae-458f-4365-96d9-c325533731d1/timeouts HTTP/1.1\r\nHost: 127.0.0.1:49615\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:16 GMT
send: b'POST /session/31ae4cae-458f-4365-96d9-c325533731d1/url HTTP/1.1\r\nHost: 127.0.0.1:49615\r\nAccept-Encoding: identity\r\nContent-Length: 35\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://search.yahoo.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 14
header: date: Thu, 18 Jun 2020 16:15:16 GMT</msg>
<status status="PASS" starttime="20200618 16:15:11.662" endtime="20200618 16:15:21.924"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200618 16:15:22.483" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20200618 16:15:22.483" level="INFO">send: b'GET /session/31ae4cae-458f-4365-96d9-c325533731d1/screenshot HTTP/1.1\r\nHost: 127.0.0.1:49615\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: content-type: application/json; charset=utf-8
header: cache-control: no-cache
header: content-length: 3991264
header: date: Thu, 18 Jun 2020 16:15:21 GMT</msg>
<status status="PASS" starttime="20200618 16:15:21.934" endtime="20200618 16:15:22.483"></status>
</kw>
<status status="PASS" starttime="20200618 16:15:11.659" endtime="20200618 16:15:22.483" critical="yes"></status>
</test>
<status status="PASS" starttime="20200618 16:14:44.437" endtime="20200618 16:15:22.502"></status>
</suite>
<status status="PASS" starttime="20200618 16:14:26.559" endtime="20200618 16:15:22.522"></status>
</suite>
<statistics>
<total>
<stat pass="43" fail="0">Critical Tests</stat>
<stat pass="43" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0">delete</stat>
<stat pass="7" fail="0">faker</stat>
<stat pass="5" fail="0">get</stat>
<stat pass="1" fail="0">get-cert</stat>
<stat pass="3" fail="0">head</stat>
<stat pass="3" fail="0">json</stat>
<stat pass="2" fail="0">options</stat>
<stat pass="1" fail="0">patch</stat>
<stat pass="9" fail="0">post</stat>
<stat pass="6" fail="0">put</stat>
</tag>
<suite>
<stat pass="43" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="7" fail="0" id="s1-s1" name="Faker">Tests.Faker</stat>
<stat pass="32" fail="0" id="s1-s2" name="Requests">Tests.Requests</stat>
<stat pass="4" fail="0" id="s1-s3" name="Simpletest">Tests.Simpletest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
